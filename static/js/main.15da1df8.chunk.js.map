{"version":3,"sources":["components/Navbar.js","components/Textarea.js","components/Alert.js","components/About.js","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","react_router_dom","to","placeholder","onClick","togglemode","htmlFor","Texatarea","_useState","useState","_useState2","Object","slicedToArray","text","setText","sum","Fragment","style","color","heading","backgroundColor","value","onChange","event","target","rows","length","newText","toUpperCase","showAlert","toLowerCase","newText1","split","i","charAt","slice","join","filter","element","PropTypes","title","string","about","defaultProps","Alert","height","alert","role","msg","data-bs-dismiss","About","aria-labelledby","data-bs-parent","App","setMode","_useState3","_useState4","setAlert","setTimeout","document","body","components_Alert","react_router","path","components_About","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.15da1df8.chunk.js","sourcesContent":["/* eslint-disable react/no-typos */\r\nimport React  from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from \"react-router-dom\"\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n  <a className={`navbar-brand text-${props.mode==='light' ? 'dark': 'light'}`} href=\"/\">Navbar</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n        \r\n         <Link className=\"nav-link\"  to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n           <Link className=\"nav-link\" to=\"/about\">About</Link> \r\n        </li>\r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-outline-success mx-4\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className={`form-check form-switch text-${props.mode==='light' ? 'dark': 'light'}`} >\r\n  <input className=\"form-check-input\" type=\"checkbox\"  onClick={props.togglemode} id=\"flexSwitchCheckDefault\" />\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Darkmode</label>\r\n   </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    \r\n  )\r\n}\r\nNavbar.PropTypes={title: PropTypes.string,\r\n                  about: PropTypes.string,\r\n}\r\nNavbar.defaultProps={\r\n    title: \"Title\",\r\n    about: \"About\",\r\n}","import React ,{ useState }from 'react'\r\n// import PropTypes from 'prop-types'\r\n// import PropTypes from 'prop-types'\r\n\r\nexport default function Texatarea(props) {\r\n    const [text,setText ]= useState('');\r\n\r\n    const changeThetext=(event)=>{\r\n        setText(event.target.value);\r\n        \r\n    }\r\n    const convertUpperCase=()=>{\r\n        if(text.length !== 0){\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\",\"success\")\r\n        }else{\r\n        props.showAlert(\"please enter the text\",\"warning\")\r\n        }\r\n    }\r\n    const convertLowerCase=()=>{\r\n        if(text.length !== 0){\r\n            let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\",\"success\")\r\n            }else{\r\n            props.showAlert(\"please enter the text\",\"warning\")\r\n            }\r\n        \r\n    }\r\n    const convertClearCase=()=>{\r\n        if(text.length !== 0){\r\n            setText(\"\");\r\n        props.showAlert(\"Cleared the text\",\"success\")\r\n            }else{\r\n            props.showAlert(\"please enter the text\",\"warning\")\r\n            }\r\n        \r\n    }\r\n    const convertBoldCase=()=>{\r\n        if(text.length !== 0){\r\n            let newText1=text.split(\" \");\r\n        for (var i = 0; i < newText1.length; i++) {\r\n            newText1[i] = newText1[i].charAt(0).toUpperCase() + newText1[i].slice(1);\r\n        \r\n        }\r\n        let newText=newText1.join(\" \");\r\n        setText(newText);\r\n        props.showAlert(\"Text is Capitalized\",\"success\")\r\n            }else{\r\n            props.showAlert(\"please enter the text\",\"warning\")\r\n            }\r\n        \r\n    }\r\n    let sum=0;\r\n    const vowels=()=>{\r\n        let newText1=text.split(\"\");\r\n        for (var i = 0; i < newText1.length; i++) {\r\n        if(newText1[i]===\"a\"|| newText1[i]===\"e\"|| newText1[i]===\"i\"|| newText1[i]===\"o\"||newText1[i]===\"u\"){\r\n            sum=sum+1;\r\n        }\r\n        }\r\n        setText(\"No of vowels : \"+sum);\r\n    }\r\n    \r\n    return (\r\n\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark' ? 'white': 'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className='mb-3'>\r\n                <textarea className={`form-control bg-${props.mode}`} style={{backgroundColor:props.mode==='dark' ? 'dark': 'light', color:props.mode==='dark' ? 'white': 'black'}} value={text} onChange={changeThetext}  id='mybox' rows='8'></textarea>\r\n            </div>\r\n            <button  className='btn btn-primary mx-2 my-1' onClick={convertUpperCase}>Convert to UpperCase</button>\r\n            <button  className='btn btn-primary mx-2 my-1' onClick={convertLowerCase}>Convert to LowerCase</button>\r\n            <button className='btn btn-primary mx-2 my-1' onClick={convertClearCase}>Clear Text</button>\r\n            <button className='btn btn-primary mx-2 my-1' onClick={convertBoldCase}>Captalize</button>\r\n            <button className='btn btn-primary mx-2 my-1' onClick={vowels}>Vowels</button>\r\n        </div>\r\n        <div className='container my-3' style={{color:props.mode==='dark' ? 'white': 'black'}}>\r\n            <h3>Your text summary</h3>\r\n        <p> \r\n            {text.split(\" \").filter((element)=>{return element.length !== 0}).length}  words {text.length} character and {text.split(\"\\n\").filter((element)=>{return element.length !== 0}).length} lines </p>\r\n            <p>{0.008 * text.split(\" \").filter((element)=>{return element.length !== 0}).length} Minutes read</p>\r\n            <h3>Preview</h3>\r\n            <p>{text}</p>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","//rfce\r\nimport React from \"react\";\r\n// import PropTypes from 'prop-types'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    <div style={{height:\"70px\"}}>\r\n    {props.alert && <div\r\n      className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n      role=\"alert\"\r\n    >\r\n       <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-close\"\r\n        data-bs-dismiss=\"alert\"\r\n        aria-label=\"Close\"\r\n      ></button>\r\n    </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from 'react'\r\n// import PropTypes from 'prop-types'\r\n\r\nfunction About(props) {\r\n  return (\r\n    <div className='container'>\r\n    <div className=\"accordion\" id=\"accordionExample\">\r\n    <h2  className={`text-${props.mode==='light' ? 'dark': 'light'}`}>About Us</h2>\r\n\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"headingOne\">\r\n        <button className={`accordion-button bg-${props.mode} text-${props.mode==='light' ? 'dark': 'light'}`} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n          Accordion Item #1\r\n        </button>\r\n      </h2>\r\n      <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n        <div className={`accordion-body bg-${props.mode} text-${props.mode==='light' ? 'dark': 'light'}`}>\r\n          <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n        <button className={`accordion-button collapsed bg-${props.mode} text-${props.mode==='light' ? 'dark': 'light'}`} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n          Accordion Item #2\r\n        </button>\r\n      </h2>\r\n      <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n        <div className={`accordion-body bg-${props.mode} text-${props.mode==='light' ? 'dark': 'light'}`}>\r\n          <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"headingThree\">\r\n        <button className={`accordion-button collapsed bg-${props.mode} text-${props.mode==='light' ? 'dark': 'light'}`} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n          Accordion Item #3\r\n        </button>\r\n      </h2>\r\n      <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n        <div className={`accordion-body bg-${props.mode} text-${props.mode==='light' ? 'dark': 'light'}`}>\r\n          <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import Navbar from './components/Navbar';\nimport Textarea from './components/Textarea';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport './App.css';\nimport React, { useState } from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode]= useState('light');\n  const [alert, setAlert]=useState(\"\");\n    const showAlert=(msg,type)=>{\n    setAlert({\n      msg : msg,\n      type :type\n    })\n     setTimeout(() => {\n      setAlert(null)\n     }, 1500); \n    }\n  // const showAlert=()=>{\n  //     if(mode==='light'){\n  //       setAlert(\"Dark mood has been enabled\");\n  //     }else{\n  //       setAlert(\"Light mood has been enabled\");\n  //     }\n  //   }\n  const togglemode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#212529';\n      showAlert(\"Dark mood has been enabled\",\"success\");\n      \n    }else{\n      setMode('light');\n      document.body.style.backgroundColor='#f8f9fa';\n      showAlert(\"Light mood has been enabled\",\"success\");\n    }\n  }\n  \n  return (\n    <>\n      <Router> \n      <Navbar  mode={mode} togglemode={togglemode}/>\n      <Alert alert={alert} />\n      <div className='container'>\n      <Switch>\n       <Route path=\"/about\">\n         <About  mode={mode}/>\n       </Route>\n      \n       <Route path=\"/\">\n        <Textarea mode={mode} heading=\"Enter here\" showAlert={showAlert}/>\n      </Route>\n     </Switch>\n      </div>\n       </Router> \n      \n      </>\n    \n    \n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}