{"version":3,"sources":["components/Navbar.js","components/Textarea.js","components/Alert.js","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","placeholder","onClick","togglemode","htmlFor","Texatarea","_useState","useState","_useState2","Object","slicedToArray","text","setText","sum","Fragment","style","color","heading","backgroundColor","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","newText1","split","i","length","charAt","slice","join","PropTypes","title","string","about","defaultProps","Alert","alert","role","msg","data-bs-dismiss","App","setMode","_useState3","_useState4","setAlert","setTimeout","document","body","components_Alert","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.deac090f.chunk.js","sourcesContent":["/* eslint-disable react/no-typos */\r\nimport React  from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from \"react-router-dom\"\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n  <a className={`navbar-brand text-${props.mode==='light' ? 'dark': 'light'}`} href=\"/\">Navbar</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n         {/* <Link className=\"nav-link\"  to=\"/\">Home</Link>*/}\r\n          <a className=\"nav-link\"  href=\"#\">Home</a>\r\n        </li>\r\n        {/*<li className=\"nav-item\">\r\n           <Link className=\"nav-link\" to=\"/about\">About</Link> \r\n          <a className=\"nav-link\" href=\"/about\">About</a>\r\n        </li>*/}\r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-outline-success mx-4\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className={`form-check form-switch text-${props.mode==='light' ? 'dark': 'light'}`} >\r\n  <input className=\"form-check-input\" type=\"checkbox\"  onClick={props.togglemode} id=\"flexSwitchCheckDefault\" />\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Darkmode</label>\r\n   </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    \r\n  )\r\n}\r\nNavbar.PropTypes={title: PropTypes.string,\r\n                  about: PropTypes.string,\r\n}\r\nNavbar.defaultProps={\r\n    title: \"Title\",\r\n    about: \"About\",\r\n}","import React ,{ useState }from 'react'\r\n// import PropTypes from 'prop-types'\r\n// import PropTypes from 'prop-types'\r\n\r\nexport default function Texatarea(props) {\r\n    const [text,setText ]= useState('');\r\n\r\n    const changeThetext=(event)=>{\r\n        setText(event.target.value);\r\n        \r\n    }\r\n    const convertUpperCase=()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\",\"success\")\r\n    }\r\n    const convertLowerCase=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\",\"success\")\r\n    }\r\n    const convertClearCase=()=>{\r\n        setText(\"\");\r\n        props.showAlert(\"Cleared the text\",\"success\")\r\n    }\r\n    const convertBoldCase=()=>{\r\n        let newText1=text.split(\" \");\r\n        for (var i = 0; i < newText1.length; i++) {\r\n            newText1[i] = newText1[i].charAt(0).toUpperCase() + newText1[i].slice(1);\r\n        \r\n        }\r\n        let newText=newText1.join(\" \");\r\n        setText(newText);\r\n        props.showAlert(\"Text is Capitalized\",\"success\")\r\n    }\r\n    let sum=0;\r\n    const vowels=()=>{\r\n        let newText1=text.split(\"\");\r\n        for (var i = 0; i < newText1.length; i++) {\r\n        if(newText1[i]===\"a\"|| newText1[i]===\"e\"|| newText1[i]===\"i\"|| newText1[i]===\"o\"||newText1[i]===\"u\"){\r\n            sum=sum+1;\r\n        }\r\n        }\r\n        setText(\"No of vowels : \"+sum);\r\n    }\r\n    \r\n    return (\r\n\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark' ? 'white': 'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className='mb-3'>\r\n                <textarea className={`form-control bg-${props.mode}`} style={{backgroundColor:props.mode==='dark' ? 'dark': 'light', color:props.mode==='dark' ? 'white': 'black'}} value={text} onChange={changeThetext}  id='mybox' rows='8'></textarea>\r\n            </div>\r\n            <button className='btn btn-primary mx-2' onClick={convertUpperCase}>Convert to UpperCase</button>\r\n            <button className='btn btn-primary mx-2' onClick={convertLowerCase}>Convert to LowerCase</button>\r\n            <button className='btn btn-primary mx-2' onClick={convertClearCase}>Clear Text</button>\r\n            <button className='btn btn-primary mx-2' onClick={convertBoldCase}>Captalize</button>\r\n            <button className='btn btn-primary mx-2' onClick={vowels}>Vowels</button>\r\n        </div>\r\n        <div className='container my-3' style={{color:props.mode==='dark' ? 'white': 'black'}}>\r\n            <h3>Your text summary</h3>\r\n        <p> \r\n            {text.split(\" \")[0].length === 0 ? \"0\" : text.split(\" \").length}  words and {text.length} characters {text.split(\"\\n\").length} lines </p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n            <h3>Preview</h3>\r\n            <p>{text}</p>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","//rfce\r\nimport React from \"react\";\r\n// import PropTypes from 'prop-types'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    props.alert && <div\r\n      className=\"alert alert-success alert-dismissible fade show\"\r\n      role=\"alert\"\r\n    >\r\n       {props.alert.type} : {props.alert.msg}\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-close\"\r\n        data-bs-dismiss=\"alert\"\r\n        aria-label=\"Close\"\r\n      ></button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import Navbar from './components/Navbar';\nimport Textarea from './components/Textarea';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport './App.css';\nimport React, { useState } from 'react';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode]= useState('light');\n  const [alert, setAlert]=useState(\"\");\n    const showAlert=(msg,type)=>{\n    setAlert({\n      msg : msg,\n      type :type\n    })\n     setTimeout(() => {\n      setAlert(null)\n     }, 1500); \n    }\n  // const showAlert=()=>{\n  //     if(mode==='light'){\n  //       setAlert(\"Dark mood has been enabled\");\n  //     }else{\n  //       setAlert(\"Light mood has been enabled\");\n  //     }\n  //   }\n  const togglemode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#212529';\n      showAlert(\"Dark mood has been enabled\",\"success\");\n      \n    }else{\n      setMode('light');\n      document.body.style.backgroundColor='#f8f9fa';\n      showAlert(\"Light mood has been enabled\",\"success\");\n    }\n  }\n  \n  return (\n    <>\n      {/* <Router> */}\n      <Navbar  mode={mode} togglemode={togglemode}/>\n      <Alert alert={alert} />\n      <div className='container'>\n      {/*  <Switch>\n      // <Route path=\"/about\">\n      //   <About  mode={mode}/>\n      // </Route>\n      \n      // <Route path=\"/\">*/}\n        <Textarea mode={mode} heading=\"Enter here\" showAlert={showAlert}/>\n    {/*  </Route>\n    // </Switch>\n      </div>\n      // </Router> */}\n      </div>\n      </>\n    \n    \n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}